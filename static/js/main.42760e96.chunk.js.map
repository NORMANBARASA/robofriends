{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Errorboundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredrobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAACC,GAGb,OACC,sBAAKC,UAAY,qDAAjB,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA4BH,EAAMI,GAAlC,cACrB,gCACC,mCAAMJ,EAAMK,QACZ,4BAAIL,EAAMM,eCaEC,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAGlB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OAAU,cAAC,EAAD,CAEVP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHXI,EAAKN,UCEEQ,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKb,UAAU,+BAAf,SAEA,uBACCc,KAAM,SACNC,YAAY,gBACZC,SAAYH,OCIAI,EAXA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAArE,SACCtB,EAAMuB,YCqBMC,E,kDAtBd,WAAYxB,GAAO,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACZC,UAAU,GAHM,E,qDAMlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAO3B,WACC,OAAGG,KAAKJ,MAAMC,SACN,0DAGDG,KAAK7B,MAAMuB,a,GArBQQ,aC8DZC,G,wDAnDd,aAAc,IAAD,8BACZ,gBAoBDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SApB1C,EAAKX,MAAQ,CACbjB,OAAQ,GACRK,YAAa,IAJA,E,qDAWb,WAAoB,IAAD,OAClBwB,MAAM,8CAA8CC,MAAK,SAAAC,GACzD,OAAOA,EAASC,UAEfF,MAAK,SAAAG,GACL,EAAKX,SAAS,CAACtB,OAAQiC,S,oBAUzB,WAAS,IAAD,OACDC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAExC,SAAAC,GACC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKrB,MAAMZ,YAAYgC,kBAIpE,OAAgC,IAA7BhB,KAAKJ,MAAMjB,OAAOuC,OACb,+CAGN,sBAAK9C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,e,GA7CFX,cCCHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.42760e96.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\n\t\n\treturn (\n\t\t<div className = 'tc bg-dark-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t<img alt='robots' src = {`https://robohash.org/${props.id}?200*200`}/>\n\t\t<div>\n\t\t\t<h2> {props.name}</h2>\n\t\t\t<p>{props.email}</p>\n\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\n\nimport Card from './Card.js'\n\n\nconst CardList = ({robots}) => {\n\n\t \n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\treturn \t(\t<Card \n\t\tkey= {user.id}\n\t\tid={robots[i].id} \n\t\tname={robots[i].name} \n\t\temail={robots[i].email}/>)\n\n})}\n  \t\t</div>\n\t\t)\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='tc bg-dark-green dib br3 pa2'>\n\n\t\t<input\n\t\t type= \"search\" \n\t\t placeholder=\"search robots\"\n\t\t onChange = {searchChange}\n\t\t />\n\t\t </div>\n\t\t)\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '1000px'}}>\n\t\t{props.children}\n\n\t\t</div>\n\n\t\t\n\t\t)\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\tcomponentDidCatch(error, info){\n \tthis.setState({hasError: true})\n}\n\n\n\n\n\nrender(){\n\tif(this.state.hasError){\n\t\treturn <h1>Oooops. That is not good</h1>\n\t}\n\n\treturn this.props.children\n}\n}\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/Errorboundry'\nimport './App.css'\n\n\n\n\n\nclass App extends Component {\n\n\tconstructor(){\n\t\tsuper()\n\tthis.state = {\n\trobots: [], \n\tsearchfield: ''\n\n}\n\t\n\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response => {\n\t\treturn response.json();\t\n\t\t})\n\t\t.then(users =>{\n\t\t\tthis.setState({robots: users})\n\t\t})\n\t\n}\n\n\tonSearchChange = (event) =>{\n\t\tthis.setState({searchfield: event.target.value})\n\t\t\n\t\n\t}\n\trender(){\n\t\tconst filteredrobots = this.state.robots.filter(\n\n\t\t\trobot =>{\n\t\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\n\t\t\t}\n\t\t\t)\nif(this.state.robots.length === 0){\n\treturn <h1>LOADING......</h1>\n}else{\n\treturn (\n\t\t<div className='tc'>\n\t\t<h1 className='f1'>Robofriends</h1>\n\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t<Scroll>\n\t\t<ErrorBoundry>\n\t\t<CardList robots={filteredrobots}/>\n\t\t</ErrorBoundry>\n\t\t</Scroll>\n\t\t</div>\n\t\t)}\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport 'tachyons';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}